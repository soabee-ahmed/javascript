
class Solution {
    public int[] topKFrequent(int[] nums, int k) {
    Map<Integer,Integer> map1=new HashMap<>();                               //create a hashmap which stores element of array and its total occurences
    for(int i=0;i<nums.length;i++){                                              
        map1.put(nums[i],map1.getOrDefault(nums[i],0)+1);                     
    }
    PriorityQueue<Integer> pq=new PriorityQueue<>((a,b)->map1.get(b)-map1.get(a));    //make a priority queue with the comparator so that the elements in priorityqueue are arranged in descending order
    pq.addAll(map1.keySet());
    int res[]=new int[k];                         //make an array for storing top k frequent elements
    for(int i=0;i<k;i++){         
        res[i]=pq.poll();                          //put top k elements of priority queue in the array res
    }
    return res;                                    //return the array res

    }
}
